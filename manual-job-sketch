
        stage('Connect to VMs'){
            when {
                expression { params.ACTION == 'Deploy' }
            }
            steps{
                script {
                    sh "ssh -i ${SSH_KEY} ${SSH_USER}@${VM_IP} 'echo Connected to VM'"
                }
            }
        }

        stage('Check and remove previous app installations'){
            when {
                expression { params.ACTION == 'Deploy' }
            }
            steps{
                script {
                    sh "ssh -i ${SSH_KEY} ${SSH_USER}@${VM_IP} 'docker ps -q --filter \"name=${APP_NAME}\" | grep -q . && docker stop ${APP_NAME} && docker rm ${APP_NAME} || echo \"No previous version running\"'"
                }
            }
        }

        stage('Pull latest Docker Image') {
            when {
                expression { params.ACTION == 'Deploy' }
            }
            steps {
                script {
                    sh "ssh -i ${SSH_KEY} ${SSH_USER}@${VM_IP} 'docker pull ${DOCKER_IMAGE}'"
                }
            }
        }

        stage('Run Application') {
            when {
                expression { params.ACTION == 'Deploy' }
            }
            steps {
                script {
                    sh """
                    ssh -i ${SSH_KEY} ${SSH_USER}@${VM_IP} << EOF
                    docker run -d --name ${APP_NAME} -e MYSQL_URL=${MYSQL_URL} -p ${APP_PORT}:8080 ${DOCKER_IMAGE}
                    EOF
                    """
                }
            }
        }