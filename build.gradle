import java.awt.Desktop

plugins {
  id 'java'
  id 'org.springframework.boot' version '3.2.0'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'org.graalvm.buildtools.native' version '0.9.28'
  id 'io.spring.javaformat' version '0.0.41'
  id "io.spring.nohttp" version "0.0.11"
  // axion plugin for managing versions
  id 'pl.allegro.tech.build.axion-release' version '1.15.1'
  // maven publish plugin
  id 'maven-publish'
  // gradle checkstyle plugin
  id 'checkstyle'
}

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'io.spring.javaformat'
apply plugin: 'pl.allegro.tech.build.axion-release'
apply plugin: 'maven-publish'

gradle.startParameter.excludedTaskNames += [ "checkFormatAot", "checkFormatAotTest" ]

group = 'org.springframework.samples'

scmVersion {
  localOnly.set(true)
}

version = scmVersion {}.version

java {
  sourceCompatibility = JavaVersion.VERSION_17
}

checkstyle {
    toolVersion = '10.14.2'
}

repositories {
  mavenCentral()
}

ext.webjarsFontawesomeVersion = "4.7.0"
ext.webjarsBootstrapVersion = "5.3.2"

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-cache'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'javax.cache:cache-api'
  implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
  runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
  runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
  runtimeOnly 'com.github.ben-manes.caffeine:caffeine'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'com.mysql:mysql-connector-j'
  runtimeOnly 'org.postgresql:postgresql'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.springframework.boot:spring-boot-docker-compose'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:mysql'
  checkstyle 'io.spring.javaformat:spring-javaformat-checkstyle:0.0.41'
  checkstyle 'com.puppycrawl.tools:checkstyle:10.12.5'
}

tasks.named('test') {
    useJUnitPlatform()
    exclude '**/PostgresIntegrationTests.class'
}

tasks.withType(Test) {
    useJUnitPlatform()
    exclude '**/PostgresIntegrationTests.class'
}

// Checkstyle configuration - html reports, main classes paths, do not allow http
checkstyle {
  configDirectory = project.file('src/checkstyle')
  configFile = file('src/checkstyle/nohttp-checkstyle.xml')
}

checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}

checkstyleNohttp {
  configDirectory = project.file('src/checkstyle')
  configFile = file('src/checkstyle/nohttp-checkstyle.xml')
  enabled = true
}

tasks.named("formatMain").configure { dependsOn("checkstyleMain") }
tasks.named("formatMain").configure { dependsOn("checkstyleNohttp") }
tasks.named("formatTest").configure { dependsOn("checkstyleTest") }
tasks.named("formatTest").configure { dependsOn("checkstyleNohttp") }

//custom task
tasks.register('openTestResults') {
  group = "Verification"
  description = "Opens web browser with index.html from test directory"
  dependsOn('build')
  dependsOn('test')
}

tasks.named('openTestResults'){

  doLast {
    exec {
      workingDir './build/reports/tests/test'

      commandLine 'cmd', '/c', 'start index.html'
    }
  }
}

tasks.named('currentVersion') {
  doNotTrackState("Allegro axiom plugin does not work with tracking state ")
}

task listRepos {
  doLast {
    println "Repositories:"
    project.repositories.each { println "Name: " + it.name + "; url: " + it.url }
  }
}

checkstyleAot.enabled = false
checkstyleAotTest.enabled = false

checkFormatAot.enabled = false
checkFormatAotTest.enabled = false

formatAot.enabled = false
formatAotTest.enabled = false
